"""initial

Revision ID: f969334da93e
Revises: 
Create Date: 2025-09-25 19:40:45.603195

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f969334da93e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gouvernorat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nomGouvernorat', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nomGouvernorat')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('nom_complet', sa.String(length=80), nullable=True),
    sa.Column('telephone', sa.String(length=15), nullable=True),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.Column('cin', sa.String(length=8), nullable=True),
    sa.Column('cin_recto', sa.String(length=255), nullable=True),
    sa.Column('cin_verso', sa.String(length=255), nullable=True),
    sa.Column('date_naissance', sa.Date(), nullable=True),
    sa.Column('adresse', sa.String(length=255), nullable=True),
    sa.Column('profession', sa.String(length=100), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('otp_code', sa.String(length=6), nullable=True),
    sa.Column('otp_expires_at', sa.DateTime(), nullable=True),
    sa.Column('otp_attempts', sa.Integer(), nullable=True),
    sa.Column('otp_last_sent', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cin'),
    sa.UniqueConstraint('email')
    )
    op.create_table('associations',
    sa.Column('id_association', sa.Integer(), nullable=False),
    sa.Column('nom_complet', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('description_association', sa.String(length=255), nullable=True),
    sa.Column('telephone', sa.String(length=15), nullable=False),
    sa.Column('adresse', sa.String(length=100), nullable=True),
    sa.Column('rne', sa.String(length=20), nullable=True),
    sa.Column('type_association', sa.Enum('HUMANITAIRE', 'EDUCATION', 'SANTE', 'ENVIRONNEMENT', 'AUTRE', name='type_association_enum'), nullable=False),
    sa.Column('photo', sa.String(length=255), nullable=True),
    sa.Column('matricule_fiscal', sa.String(length=50), nullable=True),
    sa.Column('cin_fiscale', sa.String(length=255), nullable=True),
    sa.Column('releve_rib', sa.String(length=50), nullable=True),
    sa.Column('gouvernorat_id', sa.Integer(), nullable=True),
    sa.Column('id_admin', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gouvernorat_id'], ['gouvernorat.id'], ),
    sa.ForeignKeyConstraint(['id_admin'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id_association'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('rne')
    )
    op.create_table('dons',
    sa.Column('id_don', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=600), nullable=True),
    sa.Column('objectif', sa.Float(), nullable=False),
    sa.Column('montant_collecte', sa.Float(), nullable=True),
    sa.Column('date_fin_collecte', sa.Date(), nullable=False),
    sa.Column('recu_don', sa.String(length=255), nullable=True),
    sa.Column('photo_don', sa.String(length=255), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('nb_donateurs', sa.Integer(), nullable=True),
    sa.Column('is_reussi', sa.Boolean(), nullable=True),
    sa.Column('id_association', sa.Integer(), nullable=False),
    sa.Column('id_utilisateur', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_association'], ['associations.id_association'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_utilisateur'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id_don')
    )
    op.create_table('publications',
    sa.Column('id_publication', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=100), nullable=False),
    sa.Column('contenu', sa.Text(), nullable=False),
    sa.Column('date_publication', sa.Date(), nullable=False),
    sa.Column('nb_likes', sa.Integer(), nullable=True),
    sa.Column('nb_commentaires', sa.Integer(), nullable=True),
    sa.Column('nb_partages', sa.Integer(), nullable=True),
    sa.Column('statut', sa.String(length=20), nullable=True),
    sa.Column('id_association', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_association'], ['associations.id_association'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_publication')
    )
    op.create_table('commentaires',
    sa.Column('id_commentaire', sa.Integer(), nullable=False),
    sa.Column('contenu', sa.Text(), nullable=False),
    sa.Column('date_commentaire', sa.Date(), nullable=False),
    sa.Column('sentiment', sa.String(length=20), nullable=True),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('id_publication', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_publication'], ['publications.id_publication'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['commentaires.id_commentaire'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_commentaire')
    )
    with op.batch_alter_table('commentaires', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_commentaires_parent_comment_id'), ['parent_comment_id'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contenu', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('id_association', sa.Integer(), nullable=False),
    sa.Column('id_publication', sa.Integer(), nullable=True),
    sa.Column('id_don', sa.Integer(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_association'], ['associations.id_association'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_don'], ['dons.id_don'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_publication'], ['publications.id_publication'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_id_association'), ['id_association'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_id_don'), ['id_don'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_id_publication'), ['id_publication'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_id_user'), ['id_user'], unique=False)

    op.create_table('participations',
    sa.Column('id_participation', sa.Integer(), nullable=False),
    sa.Column('montant', sa.Float(), nullable=False),
    sa.Column('date_participation', sa.DateTime(), nullable=True),
    sa.Column('id_don', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_don'], ['dons.id_don'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_participation')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('participations')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_id_user'))
        batch_op.drop_index(batch_op.f('ix_notifications_id_publication'))
        batch_op.drop_index(batch_op.f('ix_notifications_id_don'))
        batch_op.drop_index(batch_op.f('ix_notifications_id_association'))

    op.drop_table('notifications')
    with op.batch_alter_table('commentaires', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_commentaires_parent_comment_id'))

    op.drop_table('commentaires')
    op.drop_table('publications')
    op.drop_table('dons')
    op.drop_table('associations')
    op.drop_table('users')
    op.drop_table('gouvernorat')
    # ### end Alembic commands ###
