"""Changement type_association en Enum

Revision ID: 524cbca21221
Revises: a3e5aa437bd2
Create Date: 2025-06-12 12:05:48.233093

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '524cbca21221'
down_revision = 'a3e5aa437bd2'
branch_labels = None
depends_on = None


def upgrade():
    # ðŸ”„ Corriger les anciennes valeurs en majuscules
    op.execute("""
        UPDATE associations
        SET type_association = UPPER(type_association)
        WHERE type_association IS NOT NULL
    """)

    # ðŸŽ¯ Conversion de VARCHAR vers Enum PostgreSQL
    op.execute("""
        ALTER TABLE associations
        ALTER COLUMN type_association
        TYPE type_association_enum
        USING type_association::type_association_enum
    """)

    # âœ… Optionnel : prÃ©ciser le type dans le contexte Alembic
    with op.batch_alter_table('associations', schema=None) as batch_op:
        batch_op.alter_column(
            'type_association',
            existing_type=sa.String(length=50),
            type_=sa.Enum('HUMANITAIRE', 'EDUCATION', 'SANTE', 'ENVIRONNEMENT', 'AUTRE', name='type_association_enum'),
            nullable=False
        )




    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('associations', schema=None) as batch_op:
        batch_op.alter_column('type_association',
               existing_type=sa.Enum('HUMANITAIRE', 'EDUCATION', 'SANTE', 'ENVIRONNEMENT', 'AUTRE', name='type_association_enum'),
               type_=sa.VARCHAR(length=50),
               nullable=True)

    # ### end Alembic commands ###
