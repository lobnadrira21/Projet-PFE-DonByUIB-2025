import { Injectable } from '@angular/core';
import { CanActivate, Router } from '@angular/router';
import { AuthService } from 'app/services/auth.service';
import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';


@Injectable({
  providedIn: 'root'
})
export class NoAuthGuard implements CanActivate {
  constructor(private authService: AuthService, private router: Router) {}

  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {
    const token = this.authService.getToken();
    const currentUrl = state.url;
    console.log("üîç NoAuthGuard - Checking route:", currentUrl);
  
    // Autoriser acc√®s √† la page reset-password m√™me si connect√©
    if (currentUrl.startsWith('/reset-password')) {
      console.log("üîì Acc√®s autoris√© √† reset-password m√™me avec token.");
      return true;
    }
  
    // ‚úÖ Autoriser les donateurs √† acc√©der √† /client m√™me connect√©s
    const userRole = localStorage.getItem('role');
    if (token && currentUrl === '/client' && (userRole === 'donator' || userRole === 'association')) {
      console.log("‚úÖ Access to /client allowed for role:", userRole);
      return true;
    }
    
  
    // Si pas connect√©
    if (!token) {
      console.log("‚úÖ User is NOT logged in, allowing access.");
      return true;
    }
  
    // Sinon redirection selon le r√¥le
    console.log("üö® User IS logged in, role:", userRole);
    if (userRole === 'admin') {
      this.router.navigate(['/dashboard']);
    } else if (userRole === 'association') {
      this.router.navigate(['/dashboard-association']);
    } else if (userRole === 'donator') {
      this.router.navigate(['/dashboard-donator']);
    } else {
      this.router.navigate(['/login']);
    }
  
    return false;
  }
  
  
}